{"version":3,"file":"static/js/FastingAPIResponse.bf0e69a7.chunk.js","mappings":"6LAKe,SAASA,EAAT,GAAuC,IAATC,EAAQ,EAARA,KAEzC,GAAoDC,EAAAA,EAAAA,UAAS,IAA7D,eAAOC,EAAP,KAA2BC,EAA3B,KAEA,SAASC,EAAEC,GACP,OAAOC,OAAOD,GAGlB,IAAME,EAAuB,CACzBH,EAAE,kCACFA,EAAE,wBACFA,EAAE,2BACFA,EAAE,gBACFA,EAAE,QACFA,EAAE,oBACFA,EAAE,SAGAI,EAAiBJ,EAAE,qFACnBK,EAAaL,EAAE,SAmCrB,OAfAM,EAAAA,EAAAA,YAAU,WACN,IAAIC,GAAU,EAQd,OAPAC,EAAAA,EAAAA,GAAsBZ,GACjBa,MAAK,SAAAC,GACEH,GACAR,EAAsBW,MAI3B,WACHH,GAAU,KAEf,CAACX,KAIA,gBAAKe,UAAW,iBAAWb,QAAX,IAAWA,OAAX,EAAWA,EAAoBc,QAA/C,UACI,gBAAID,UAAU,SAAd,WACI,mDACoBb,QADpB,IACoBA,OADpB,EACoBA,EAAoBe,aAExC,wBAvCZ,SAA0BC,GACtB,IAAIC,EAAgB,GAChBC,EAAI,EACR,GAAmB,IAAfF,EACAC,EAAgBZ,EAAqB,QAErC,GAAIW,EAAa,EAAG,CAChB,KAAOE,EAAIF,GACPC,EAAgBA,EAAgBZ,EAAqBa,GAAK,KAC1DA,GAAK,EAETD,EAAgBA,EAAcE,MAAM,EAAIF,EAAcG,OAAS,GAAMb,EAAaF,EAAqBW,GAAc,IAI7H,OAAQV,EAAiBW,EAwBXI,CAAgB,OAACrB,QAAD,IAACA,OAAD,EAACA,EAAoBc","sources":["components/FastingAPIResponse/FastingAPIResponse.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getFastingAPIResponse } from '../../services/orthodoxFastingAPI';\n\n\nexport default function FastingAPIResponse({ date }) {\n\n    const [fastingAPIResponse, setFastingAPIResponse] = useState({});\n\n    function _(inputTxt) {\n        return String(inputTxt);\n    }\n\n    const fastingStatusMessage = [\n        _(\"No food allowed for this date!\"),\n        _(\"raw plant based food\"),\n        _(\"cooked plant based food\"),\n        _(\"oil and wine\"),\n        _(\"fish\"),\n        _(\"milk/dairy, eggs\"),\n        _(\"meat\"),\n    ];\n\n    const bodyDayMessage = _(\"According to the Bulgarian Christian Orthodox norms, on this day you can consume \");\n    const andMessage = _(\" and \");\n\n    function fastingValue2Msg(inputValue) {\n        let returnMessage = \"\";\n        let n = 1;\n        if (inputValue === 0) {\n            returnMessage = fastingStatusMessage[0];\n        } else {\n            if (inputValue < 7) {\n                while (n < inputValue) {\n                    returnMessage = returnMessage + fastingStatusMessage[n] + \", \";\n                    n += 1;\n                }\n                returnMessage = returnMessage.slice(0, (returnMessage.length - 2)) + andMessage + fastingStatusMessage[inputValue] + \".\";\n            }\n        }\n        //alert(returnMessage);\n        return (bodyDayMessage + returnMessage);\n    }\n\n    useEffect(() => {\n        let mounted = true;\n        getFastingAPIResponse(date)\n            .then(data => {\n                if (mounted) {\n                    setFastingAPIResponse(data)\n                }\n            }\n            );\n        return () => {\n            mounted = false;\n        }\n    }, [date])\n\n\n    return (\n        <div className={'status' + fastingAPIResponse?.status}>\n            <ul className='Answer'>\n                <li>\n                    Selected Date: {fastingAPIResponse?.the_date}\n                </li>\n                <li >{fastingValue2Msg(fastingAPIResponse?.status)}</li>\n            </ul>\n        </div >\n    )\n}\n\nFastingAPIResponse.propTypes = {\n    date: PropTypes.string.isRequired\n}"],"names":["FastingAPIResponse","date","useState","fastingAPIResponse","setFastingAPIResponse","_","inputTxt","String","fastingStatusMessage","bodyDayMessage","andMessage","useEffect","mounted","getFastingAPIResponse","then","data","className","status","the_date","inputValue","returnMessage","n","slice","length","fastingValue2Msg"],"sourceRoot":""}